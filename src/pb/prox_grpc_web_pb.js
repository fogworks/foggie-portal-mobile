/**
 * @fileoverview gRPC-Web generated client stub for proto
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.19.4
// source: prox.proto

/* eslint-disable */
// @ts-nocheck

const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.proto = require('./prox_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.proto.ServiceClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.proto.ServicePromiseClient = function (hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxPingRequest,
 *   !proto.proto.ProxPingResponse>}
 */
const methodDescriptor_Service_Ping = new grpc.web.MethodDescriptor(
  '/proto.Service/Ping',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxPingRequest,
  proto.proto.ProxPingResponse,
  /**
   * @param {!proto.proto.ProxPingRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxPingResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxPingRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxPingResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxPingResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.ping = function (request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ + '/proto.Service/Ping', request, metadata || {}, methodDescriptor_Service_Ping, callback);
};

/**
 * @param {!proto.proto.ProxPingRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxPingResponse>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.ping = function (request, metadata) {
  return this.client_.unaryCall(this.hostname_ + '/proto.Service/Ping', request, metadata || {}, methodDescriptor_Service_Ping);
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxPingMinerRequest,
 *   !proto.proto.ProxPingMinerResponse>}
 */
const methodDescriptor_Service_PingMiner = new grpc.web.MethodDescriptor(
  '/proto.Service/PingMiner',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxPingMinerRequest,
  proto.proto.ProxPingMinerResponse,
  /**
   * @param {!proto.proto.ProxPingMinerRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxPingMinerResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxPingMinerRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxPingMinerResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxPingMinerResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.pingMiner = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/PingMiner',
    request,
    metadata || {},
    methodDescriptor_Service_PingMiner,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxPingMinerRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxPingMinerResponse>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.pingMiner = function (request, metadata) {
  return this.client_.unaryCall(this.hostname_ + '/proto.Service/PingMiner', request, metadata || {}, methodDescriptor_Service_PingMiner);
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxPinReq,
 *   !proto.proto.ProxPinResp>}
 */
const methodDescriptor_Service_Pin = new grpc.web.MethodDescriptor(
  '/proto.Service/Pin',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxPinReq,
  proto.proto.ProxPinResp,
  /**
   * @param {!proto.proto.ProxPinReq} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxPinResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxPinReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxPinResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxPinResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.pin = function (request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ + '/proto.Service/Pin', request, metadata || {}, methodDescriptor_Service_Pin, callback);
};

/**
 * @param {!proto.proto.ProxPinReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxPinResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.pin = function (request, metadata) {
  return this.client_.unaryCall(this.hostname_ + '/proto.Service/Pin', request, metadata || {}, methodDescriptor_Service_Pin);
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.GetPeerIdInfoReq,
 *   !proto.proto.GetPeerIDReply>}
 */
const methodDescriptor_Service_GetPeerIdInfo = new grpc.web.MethodDescriptor(
  '/proto.Service/GetPeerIdInfo',
  grpc.web.MethodType.UNARY,
  proto.proto.GetPeerIdInfoReq,
  proto.proto.GetPeerIDReply,
  /**
   * @param {!proto.proto.GetPeerIdInfoReq} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.GetPeerIDReply.deserializeBinary,
);

/**
 * @param {!proto.proto.GetPeerIdInfoReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.GetPeerIDReply)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.GetPeerIDReply>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.getPeerIdInfo = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/GetPeerIdInfo',
    request,
    metadata || {},
    methodDescriptor_Service_GetPeerIdInfo,
    callback,
  );
};

/**
 * @param {!proto.proto.GetPeerIdInfoReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.GetPeerIDReply>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.getPeerIdInfo = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/GetPeerIdInfo',
    request,
    metadata || {},
    methodDescriptor_Service_GetPeerIdInfo,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxPutObjectReq,
 *   !proto.proto.ProxMultipartCreateResp>}
 */
const methodDescriptor_Service_NewMultipartObject = new grpc.web.MethodDescriptor(
  '/proto.Service/NewMultipartObject',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxPutObjectReq,
  proto.proto.ProxMultipartCreateResp,
  /**
   * @param {!proto.proto.ProxPutObjectReq} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxMultipartCreateResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxPutObjectReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxMultipartCreateResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxMultipartCreateResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.newMultipartObject = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/NewMultipartObject',
    request,
    metadata || {},
    methodDescriptor_Service_NewMultipartObject,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxPutObjectReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxMultipartCreateResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.newMultipartObject = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/NewMultipartObject',
    request,
    metadata || {},
    methodDescriptor_Service_NewMultipartObject,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxCompleteMultipartReq,
 *   !proto.proto.ProxCompleteMultipartResp>}
 */
const methodDescriptor_Service_CompleteMultipart = new grpc.web.MethodDescriptor(
  '/proto.Service/CompleteMultipart',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxCompleteMultipartReq,
  proto.proto.ProxCompleteMultipartResp,
  /**
   * @param {!proto.proto.ProxCompleteMultipartReq} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxCompleteMultipartResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxCompleteMultipartReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxCompleteMultipartResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxCompleteMultipartResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.completeMultipart = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/CompleteMultipart',
    request,
    metadata || {},
    methodDescriptor_Service_CompleteMultipart,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxCompleteMultipartReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxCompleteMultipartResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.completeMultipart = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/CompleteMultipart',
    request,
    metadata || {},
    methodDescriptor_Service_CompleteMultipart,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxListUploadReq,
 *   !proto.proto.ProxListMultipartUploadResponse>}
 */
const methodDescriptor_Service_ListMultipart = new grpc.web.MethodDescriptor(
  '/proto.Service/ListMultipart',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxListUploadReq,
  proto.proto.ProxListMultipartUploadResponse,
  /**
   * @param {!proto.proto.ProxListUploadReq} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxListMultipartUploadResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxListUploadReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxListMultipartUploadResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxListMultipartUploadResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.listMultipart = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/ListMultipart',
    request,
    metadata || {},
    methodDescriptor_Service_ListMultipart,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxListUploadReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxListMultipartUploadResponse>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.listMultipart = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/ListMultipart',
    request,
    metadata || {},
    methodDescriptor_Service_ListMultipart,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxListPartsReq,
 *   !proto.proto.ProxListPartsResponse>}
 */
const methodDescriptor_Service_ListObjectParts = new grpc.web.MethodDescriptor(
  '/proto.Service/ListObjectParts',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxListPartsReq,
  proto.proto.ProxListPartsResponse,
  /**
   * @param {!proto.proto.ProxListPartsReq} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxListPartsResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxListPartsReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxListPartsResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxListPartsResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.listObjectParts = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/ListObjectParts',
    request,
    metadata || {},
    methodDescriptor_Service_ListObjectParts,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxListPartsReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxListPartsResponse>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.listObjectParts = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/ListObjectParts',
    request,
    metadata || {},
    methodDescriptor_Service_ListObjectParts,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxListObjectsReq,
 *   !proto.proto.ProxListObjectsResp>}
 */
const methodDescriptor_Service_ListObjects = new grpc.web.MethodDescriptor(
  '/proto.Service/ListObjects',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxListObjectsReq,
  proto.proto.ProxListObjectsResp,
  /**
   * @param {!proto.proto.ProxListObjectsReq} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxListObjectsResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxListObjectsReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxListObjectsResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxListObjectsResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.listObjects = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/ListObjects',
    request,
    metadata || {},
    methodDescriptor_Service_ListObjects,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxListObjectsReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxListObjectsResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.listObjects = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/ListObjects',
    request,
    metadata || {},
    methodDescriptor_Service_ListObjects,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxGetBlockRequest,
 *   !proto.proto.ProxGetBlockResponse>}
 */
const methodDescriptor_Service_GetBlock = new grpc.web.MethodDescriptor(
  '/proto.Service/GetBlock',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.proto.ProxGetBlockRequest,
  proto.proto.ProxGetBlockResponse,
  /**
   * @param {!proto.proto.ProxGetBlockRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxGetBlockResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxGetBlockRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxGetBlockResponse>}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.getBlock = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + '/proto.Service/GetBlock',
    request,
    metadata || {},
    methodDescriptor_Service_GetBlock,
  );
};

/**
 * @param {!proto.proto.ProxGetBlockRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxGetBlockResponse>}
 *     The XHR Node Readable Stream
 */
proto.proto.ServicePromiseClient.prototype.getBlock = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + '/proto.Service/GetBlock',
    request,
    metadata || {},
    methodDescriptor_Service_GetBlock,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxGetCarMetaRequest,
 *   !proto.proto.ProxGetCarMetaResponse>}
 */
const methodDescriptor_Service_GetCarMeta = new grpc.web.MethodDescriptor(
  '/proto.Service/GetCarMeta',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.proto.ProxGetCarMetaRequest,
  proto.proto.ProxGetCarMetaResponse,
  /**
   * @param {!proto.proto.ProxGetCarMetaRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxGetCarMetaResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxGetCarMetaRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxGetCarMetaResponse>}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.getCarMeta = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + '/proto.Service/GetCarMeta',
    request,
    metadata || {},
    methodDescriptor_Service_GetCarMeta,
  );
};

/**
 * @param {!proto.proto.ProxGetCarMetaRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxGetCarMetaResponse>}
 *     The XHR Node Readable Stream
 */
proto.proto.ServicePromiseClient.prototype.getCarMeta = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + '/proto.Service/GetCarMeta',
    request,
    metadata || {},
    methodDescriptor_Service_GetCarMeta,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxGetRequest,
 *   !proto.proto.ProxGetResponse>}
 */
const methodDescriptor_Service_GetObject = new grpc.web.MethodDescriptor(
  '/proto.Service/GetObject',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.proto.ProxGetRequest,
  proto.proto.ProxGetResponse,
  /**
   * @param {!proto.proto.ProxGetRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxGetResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxGetRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxGetResponse>}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.getObject = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + '/proto.Service/GetObject',
    request,
    metadata || {},
    methodDescriptor_Service_GetObject,
  );
};

/**
 * @param {!proto.proto.ProxGetRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxGetResponse>}
 *     The XHR Node Readable Stream
 */
proto.proto.ServicePromiseClient.prototype.getObject = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + '/proto.Service/GetObject',
    request,
    metadata || {},
    methodDescriptor_Service_GetObject,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxGetRequests,
 *   !proto.proto.ProxGetResponse>}
 */
const methodDescriptor_Service_GetObjects = new grpc.web.MethodDescriptor(
  '/proto.Service/GetObjects',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.proto.ProxGetRequests,
  proto.proto.ProxGetResponse,
  /**
   * @param {!proto.proto.ProxGetRequests} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxGetResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxGetRequests} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxGetResponse>}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.getObjects = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + '/proto.Service/GetObjects',
    request,
    metadata || {},
    methodDescriptor_Service_GetObjects,
  );
};

/**
 * @param {!proto.proto.ProxGetRequests} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxGetResponse>}
 *     The XHR Node Readable Stream
 */
proto.proto.ServicePromiseClient.prototype.getObjects = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + '/proto.Service/GetObjects',
    request,
    metadata || {},
    methodDescriptor_Service_GetObjects,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxSearchRequest,
 *   !proto.proto.ProxSearchResponse>}
 */
const methodDescriptor_Service_SearchObject = new grpc.web.MethodDescriptor(
  '/proto.Service/SearchObject',
  grpc.web.MethodType.SERVER_STREAMING,
  proto.proto.ProxSearchRequest,
  proto.proto.ProxSearchResponse,
  /**
   * @param {!proto.proto.ProxSearchRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxSearchResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxSearchRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxSearchResponse>}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.searchObject = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + '/proto.Service/SearchObject',
    request,
    metadata || {},
    methodDescriptor_Service_SearchObject,
  );
};

/**
 * @param {!proto.proto.ProxSearchRequest} request The request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxSearchResponse>}
 *     The XHR Node Readable Stream
 */
proto.proto.ServicePromiseClient.prototype.searchObject = function (request, metadata) {
  return this.client_.serverStreaming(
    this.hostname_ + '/proto.Service/SearchObject',
    request,
    metadata || {},
    methodDescriptor_Service_SearchObject,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxFindRequest,
 *   !proto.proto.ProxObjects>}
 */
const methodDescriptor_Service_FindObjects = new grpc.web.MethodDescriptor(
  '/proto.Service/FindObjects',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxFindRequest,
  proto.proto.ProxObjects,
  /**
   * @param {!proto.proto.ProxFindRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxObjects.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxFindRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxObjects)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxObjects>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.findObjects = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/FindObjects',
    request,
    metadata || {},
    methodDescriptor_Service_FindObjects,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxFindRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxObjects>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.findObjects = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/FindObjects',
    request,
    metadata || {},
    methodDescriptor_Service_FindObjects,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxGetRequest,
 *   !proto.proto.ProxObject>}
 */
const methodDescriptor_Service_GetObjectInfo = new grpc.web.MethodDescriptor(
  '/proto.Service/GetObjectInfo',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxGetRequest,
  proto.proto.ProxObject,
  /**
   * @param {!proto.proto.ProxGetRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxObject.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxGetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxObject)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxObject>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.getObjectInfo = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/GetObjectInfo',
    request,
    metadata || {},
    methodDescriptor_Service_GetObjectInfo,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxGetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxObject>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.getObjectInfo = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/GetObjectInfo',
    request,
    metadata || {},
    methodDescriptor_Service_GetObjectInfo,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxDeleteObjectReq,
 *   !proto.proto.ProxDeleteResp>}
 */
const methodDescriptor_Service_DeleteObject = new grpc.web.MethodDescriptor(
  '/proto.Service/DeleteObject',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxDeleteObjectReq,
  proto.proto.ProxDeleteResp,
  /**
   * @param {!proto.proto.ProxDeleteObjectReq} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxDeleteResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxDeleteObjectReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxDeleteResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxDeleteResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.deleteObject = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/DeleteObject',
    request,
    metadata || {},
    methodDescriptor_Service_DeleteObject,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxDeleteObjectReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxDeleteResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.deleteObject = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/DeleteObject',
    request,
    metadata || {},
    methodDescriptor_Service_DeleteObject,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxRequestSummaryIds,
 *   !proto.proto.ProxSummaryInfos>}
 */
const methodDescriptor_Service_SummaryInfo = new grpc.web.MethodDescriptor(
  '/proto.Service/SummaryInfo',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxRequestSummaryIds,
  proto.proto.ProxSummaryInfos,
  /**
   * @param {!proto.proto.ProxRequestSummaryIds} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxSummaryInfos.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxRequestSummaryIds} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxSummaryInfos)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxSummaryInfos>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.summaryInfo = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/SummaryInfo',
    request,
    metadata || {},
    methodDescriptor_Service_SummaryInfo,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxRequestSummaryIds} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxSummaryInfos>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.summaryInfo = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/SummaryInfo',
    request,
    metadata || {},
    methodDescriptor_Service_SummaryInfo,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxRequestStatistics,
 *   !proto.proto.ProxStatisticsInfo>}
 */
const methodDescriptor_Service_Statistics = new grpc.web.MethodDescriptor(
  '/proto.Service/Statistics',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxRequestStatistics,
  proto.proto.ProxStatisticsInfo,
  /**
   * @param {!proto.proto.ProxRequestStatistics} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxStatisticsInfo.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxRequestStatistics} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxStatisticsInfo)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxStatisticsInfo>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.statistics = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/Statistics',
    request,
    metadata || {},
    methodDescriptor_Service_Statistics,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxRequestStatistics} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxStatisticsInfo>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.statistics = function (request, metadata) {
  return this.client_.unaryCall(this.hostname_ + '/proto.Service/Statistics', request, metadata || {}, methodDescriptor_Service_Statistics);
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxRenameObject,
 *   !proto.proto.ProxRenameObjectResp>}
 */
const methodDescriptor_Service_RenameObjects = new grpc.web.MethodDescriptor(
  '/proto.Service/RenameObjects',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxRenameObject,
  proto.proto.ProxRenameObjectResp,
  /**
   * @param {!proto.proto.ProxRenameObject} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxRenameObjectResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxRenameObject} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxRenameObjectResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxRenameObjectResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.renameObjects = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/RenameObjects',
    request,
    metadata || {},
    methodDescriptor_Service_RenameObjects,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxRenameObject} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxRenameObjectResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.renameObjects = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/RenameObjects',
    request,
    metadata || {},
    methodDescriptor_Service_RenameObjects,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxTimeLine,
 *   !proto.proto.ProxTimeLineResp>}
 */
const methodDescriptor_Service_GetTimeLine = new grpc.web.MethodDescriptor(
  '/proto.Service/GetTimeLine',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxTimeLine,
  proto.proto.ProxTimeLineResp,
  /**
   * @param {!proto.proto.ProxTimeLine} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxTimeLineResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxTimeLine} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxTimeLineResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxTimeLineResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.getTimeLine = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/GetTimeLine',
    request,
    metadata || {},
    methodDescriptor_Service_GetTimeLine,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxTimeLine} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxTimeLineResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.getTimeLine = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/GetTimeLine',
    request,
    metadata || {},
    methodDescriptor_Service_GetTimeLine,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxPresignedURL,
 *   !proto.proto.ProxPresignedURLResp>}
 */
const methodDescriptor_Service_GetPreSigned = new grpc.web.MethodDescriptor(
  '/proto.Service/GetPreSigned',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxPresignedURL,
  proto.proto.ProxPresignedURLResp,
  /**
   * @param {!proto.proto.ProxPresignedURL} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxPresignedURLResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxPresignedURL} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxPresignedURLResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxPresignedURLResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.getPreSigned = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/GetPreSigned',
    request,
    metadata || {},
    methodDescriptor_Service_GetPreSigned,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxPresignedURL} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxPresignedURLResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.getPreSigned = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/GetPreSigned',
    request,
    metadata || {},
    methodDescriptor_Service_GetPreSigned,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxFileInfo,
 *   !proto.proto.ProxTouchResp>}
 */
const methodDescriptor_Service_TouchFile = new grpc.web.MethodDescriptor(
  '/proto.Service/TouchFile',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxFileInfo,
  proto.proto.ProxTouchResp,
  /**
   * @param {!proto.proto.ProxFileInfo} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxTouchResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxFileInfo} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxTouchResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxTouchResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.touchFile = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/TouchFile',
    request,
    metadata || {},
    methodDescriptor_Service_TouchFile,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxFileInfo} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxTouchResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.touchFile = function (request, metadata) {
  return this.client_.unaryCall(this.hostname_ + '/proto.Service/TouchFile', request, metadata || {}, methodDescriptor_Service_TouchFile);
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxChatReq,
 *   !proto.proto.ProxChatResponse>}
 */
const methodDescriptor_Service_Chat = new grpc.web.MethodDescriptor(
  '/proto.Service/Chat',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxChatReq,
  proto.proto.ProxChatResponse,
  /**
   * @param {!proto.proto.ProxChatReq} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxChatResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxChatReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxChatResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxChatResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.chat = function (request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ + '/proto.Service/Chat', request, metadata || {}, methodDescriptor_Service_Chat, callback);
};

/**
 * @param {!proto.proto.ProxChatReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxChatResponse>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.chat = function (request, metadata) {
  return this.client_.unaryCall(this.hostname_ + '/proto.Service/Chat', request, metadata || {}, methodDescriptor_Service_Chat);
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxKNReq,
 *   !proto.proto.ProxKNResponse>}
 */
const methodDescriptor_Service_Knowledge = new grpc.web.MethodDescriptor(
  '/proto.Service/Knowledge',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxKNReq,
  proto.proto.ProxKNResponse,
  /**
   * @param {!proto.proto.ProxKNReq} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxKNResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxKNReq} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxKNResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxKNResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.knowledge = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/Knowledge',
    request,
    metadata || {},
    methodDescriptor_Service_Knowledge,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxKNReq} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxKNResponse>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.knowledge = function (request, metadata) {
  return this.client_.unaryCall(this.hostname_ + '/proto.Service/Knowledge', request, metadata || {}, methodDescriptor_Service_Knowledge);
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxCredRequest,
 *   !proto.proto.ProxCredResp>}
 */
const methodDescriptor_Service_GenerateCred = new grpc.web.MethodDescriptor(
  '/proto.Service/GenerateCred',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxCredRequest,
  proto.proto.ProxCredResp,
  /**
   * @param {!proto.proto.ProxCredRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxCredResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxCredRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxCredResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxCredResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.generateCred = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/GenerateCred',
    request,
    metadata || {},
    methodDescriptor_Service_GenerateCred,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxCredRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxCredResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.generateCred = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/GenerateCred',
    request,
    metadata || {},
    methodDescriptor_Service_GenerateCred,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxGetCredRequest,
 *   !proto.proto.ProxCredsList>}
 */
const methodDescriptor_Service_ListCreds = new grpc.web.MethodDescriptor(
  '/proto.Service/ListCreds',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxGetCredRequest,
  proto.proto.ProxCredsList,
  /**
   * @param {!proto.proto.ProxGetCredRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxCredsList.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxGetCredRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxCredsList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxCredsList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.listCreds = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/ListCreds',
    request,
    metadata || {},
    methodDescriptor_Service_ListCreds,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxGetCredRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxCredsList>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.listCreds = function (request, metadata) {
  return this.client_.unaryCall(this.hostname_ + '/proto.Service/ListCreds', request, metadata || {}, methodDescriptor_Service_ListCreds);
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxGeneratePinCredRequest,
 *   !proto.proto.ProxGeneratePinCredResp>}
 */
const methodDescriptor_Service_GenPinningCred = new grpc.web.MethodDescriptor(
  '/proto.Service/GenPinningCred',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxGeneratePinCredRequest,
  proto.proto.ProxGeneratePinCredResp,
  /**
   * @param {!proto.proto.ProxGeneratePinCredRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxGeneratePinCredResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxGeneratePinCredRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxGeneratePinCredResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxGeneratePinCredResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.genPinningCred = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/GenPinningCred',
    request,
    metadata || {},
    methodDescriptor_Service_GenPinningCred,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxGeneratePinCredRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxGeneratePinCredResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.genPinningCred = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/GenPinningCred',
    request,
    metadata || {},
    methodDescriptor_Service_GenPinningCred,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxCredRequest,
 *   !proto.proto.ProxCredResp>}
 */
const methodDescriptor_Service_DeleteCred = new grpc.web.MethodDescriptor(
  '/proto.Service/DeleteCred',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxCredRequest,
  proto.proto.ProxCredResp,
  /**
   * @param {!proto.proto.ProxCredRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxCredResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxCredRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxCredResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxCredResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.deleteCred = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/DeleteCred',
    request,
    metadata || {},
    methodDescriptor_Service_DeleteCred,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxCredRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxCredResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.deleteCred = function (request, metadata) {
  return this.client_.unaryCall(this.hostname_ + '/proto.Service/DeleteCred', request, metadata || {}, methodDescriptor_Service_DeleteCred);
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxUpdateNFTRequest,
 *   !proto.proto.ProxUpdateNFTResp>}
 */
const methodDescriptor_Service_UpdateNFT = new grpc.web.MethodDescriptor(
  '/proto.Service/UpdateNFT',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxUpdateNFTRequest,
  proto.proto.ProxUpdateNFTResp,
  /**
   * @param {!proto.proto.ProxUpdateNFTRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxUpdateNFTResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxUpdateNFTRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxUpdateNFTResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxUpdateNFTResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.updateNFT = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/UpdateNFT',
    request,
    metadata || {},
    methodDescriptor_Service_UpdateNFT,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxUpdateNFTRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxUpdateNFTResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.updateNFT = function (request, metadata) {
  return this.client_.unaryCall(this.hostname_ + '/proto.Service/UpdateNFT', request, metadata || {}, methodDescriptor_Service_UpdateNFT);
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxGExtractCode,
 *   !proto.proto.ProxGExtractCodeResp>}
 */
const methodDescriptor_Service_GenerateExtractCode = new grpc.web.MethodDescriptor(
  '/proto.Service/GenerateExtractCode',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxGExtractCode,
  proto.proto.ProxGExtractCodeResp,
  /**
   * @param {!proto.proto.ProxGExtractCode} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxGExtractCodeResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxGExtractCode} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxGExtractCodeResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxGExtractCodeResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.generateExtractCode = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/GenerateExtractCode',
    request,
    metadata || {},
    methodDescriptor_Service_GenerateExtractCode,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxGExtractCode} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxGExtractCodeResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.generateExtractCode = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/GenerateExtractCode',
    request,
    metadata || {},
    methodDescriptor_Service_GenerateExtractCode,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxFetchRequest,
 *   !proto.proto.ProxPinningInfo>}
 */
const methodDescriptor_Service_AsyncFetchObject = new grpc.web.MethodDescriptor(
  '/proto.Service/AsyncFetchObject',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxFetchRequest,
  proto.proto.ProxPinningInfo,
  /**
   * @param {!proto.proto.ProxFetchRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxPinningInfo.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxFetchRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxPinningInfo)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxPinningInfo>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.asyncFetchObject = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/AsyncFetchObject',
    request,
    metadata || {},
    methodDescriptor_Service_AsyncFetchObject,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxFetchRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxPinningInfo>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.asyncFetchObject = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/AsyncFetchObject',
    request,
    metadata || {},
    methodDescriptor_Service_AsyncFetchObject,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxFetchPinningRequest,
 *   !proto.proto.ProxFetchPinningResponse>}
 */
const methodDescriptor_Service_CancelFetchObject = new grpc.web.MethodDescriptor(
  '/proto.Service/CancelFetchObject',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxFetchPinningRequest,
  proto.proto.ProxFetchPinningResponse,
  /**
   * @param {!proto.proto.ProxFetchPinningRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxFetchPinningResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxFetchPinningRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxFetchPinningResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxFetchPinningResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.cancelFetchObject = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/CancelFetchObject',
    request,
    metadata || {},
    methodDescriptor_Service_CancelFetchObject,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxFetchPinningRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxFetchPinningResponse>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.cancelFetchObject = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/CancelFetchObject',
    request,
    metadata || {},
    methodDescriptor_Service_CancelFetchObject,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxFetchPinningRequest,
 *   !proto.proto.ProxFetchPinningResponse>}
 */
const methodDescriptor_Service_DeleteFetchObject = new grpc.web.MethodDescriptor(
  '/proto.Service/DeleteFetchObject',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxFetchPinningRequest,
  proto.proto.ProxFetchPinningResponse,
  /**
   * @param {!proto.proto.ProxFetchPinningRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxFetchPinningResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxFetchPinningRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxFetchPinningResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxFetchPinningResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.deleteFetchObject = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/DeleteFetchObject',
    request,
    metadata || {},
    methodDescriptor_Service_DeleteFetchObject,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxFetchPinningRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxFetchPinningResponse>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.deleteFetchObject = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/DeleteFetchObject',
    request,
    metadata || {},
    methodDescriptor_Service_DeleteFetchObject,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxFetchPinningRequest,
 *   !proto.proto.ProxFetchPinningResponse>}
 */
const methodDescriptor_Service_ResumeFetchObject = new grpc.web.MethodDescriptor(
  '/proto.Service/ResumeFetchObject',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxFetchPinningRequest,
  proto.proto.ProxFetchPinningResponse,
  /**
   * @param {!proto.proto.ProxFetchPinningRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxFetchPinningResponse.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxFetchPinningRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxFetchPinningResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxFetchPinningResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.resumeFetchObject = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/ResumeFetchObject',
    request,
    metadata || {},
    methodDescriptor_Service_ResumeFetchObject,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxFetchPinningRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxFetchPinningResponse>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.resumeFetchObject = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/ResumeFetchObject',
    request,
    metadata || {},
    methodDescriptor_Service_ResumeFetchObject,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxPinningListRequest,
 *   !proto.proto.ProxPinningResp>}
 */
const methodDescriptor_Service_ListPinnings = new grpc.web.MethodDescriptor(
  '/proto.Service/ListPinnings',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxPinningListRequest,
  proto.proto.ProxPinningResp,
  /**
   * @param {!proto.proto.ProxPinningListRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxPinningResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxPinningListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxPinningResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxPinningResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.listPinnings = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/ListPinnings',
    request,
    metadata || {},
    methodDescriptor_Service_ListPinnings,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxPinningListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxPinningResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.listPinnings = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/ListPinnings',
    request,
    metadata || {},
    methodDescriptor_Service_ListPinnings,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxFetchPinningRequest,
 *   !proto.proto.ProxPinningInfo>}
 */
const methodDescriptor_Service_FetchPinningEvent = new grpc.web.MethodDescriptor(
  '/proto.Service/FetchPinningEvent',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxFetchPinningRequest,
  proto.proto.ProxPinningInfo,
  /**
   * @param {!proto.proto.ProxFetchPinningRequest} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxPinningInfo.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxFetchPinningRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxPinningInfo)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxPinningInfo>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.fetchPinningEvent = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/FetchPinningEvent',
    request,
    metadata || {},
    methodDescriptor_Service_FetchPinningEvent,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxFetchPinningRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxPinningInfo>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.fetchPinningEvent = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/FetchPinningEvent',
    request,
    metadata || {},
    methodDescriptor_Service_FetchPinningEvent,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxF2PGetSpace,
 *   !proto.proto.ProxF2PGetSpaceResp>}
 */
const methodDescriptor_Service_F2PGetSpaceInfo = new grpc.web.MethodDescriptor(
  '/proto.Service/F2PGetSpaceInfo',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxF2PGetSpace,
  proto.proto.ProxF2PGetSpaceResp,
  /**
   * @param {!proto.proto.ProxF2PGetSpace} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxF2PGetSpaceResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxF2PGetSpace} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxF2PGetSpaceResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxF2PGetSpaceResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.f2PGetSpaceInfo = function (request, metadata, callback) {
  console.log(request, metadata, callback, 'a12212222');
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/F2PGetSpaceInfo',
    request,
    metadata || {},
    methodDescriptor_Service_F2PGetSpaceInfo,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxF2PGetSpace} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxF2PGetSpaceResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.f2PGetSpaceInfo = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/F2PGetSpaceInfo',
    request,
    metadata || {},
    methodDescriptor_Service_F2PGetSpaceInfo,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxF2PGetIOT,
 *   !proto.proto.ProxF2PGetIOTResp>}
 */
const methodDescriptor_Service_F2PGetIOTList = new grpc.web.MethodDescriptor(
  '/proto.Service/F2PGetIOTList',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxF2PGetIOT,
  proto.proto.ProxF2PGetIOTResp,
  /**
   * @param {!proto.proto.ProxF2PGetIOT} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxF2PGetIOTResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxF2PGetIOT} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxF2PGetIOTResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxF2PGetIOTResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.f2PGetIOTList = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/F2PGetIOTList',
    request,
    metadata || {},
    methodDescriptor_Service_F2PGetIOTList,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxF2PGetIOT} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxF2PGetIOTResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.f2PGetIOTList = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/F2PGetIOTList',
    request,
    metadata || {},
    methodDescriptor_Service_F2PGetIOTList,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxF2PGetIOT,
 *   !proto.proto.ProxF2PGetIOTAmountResp>}
 */
const methodDescriptor_Service_F2PGetIOTAmount = new grpc.web.MethodDescriptor(
  '/proto.Service/F2PGetIOTAmount',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxF2PGetIOT,
  proto.proto.ProxF2PGetIOTAmountResp,
  /**
   * @param {!proto.proto.ProxF2PGetIOT} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxF2PGetIOTAmountResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxF2PGetIOT} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxF2PGetIOTAmountResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxF2PGetIOTAmountResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.f2PGetIOTAmount = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/F2PGetIOTAmount',
    request,
    metadata || {},
    methodDescriptor_Service_F2PGetIOTAmount,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxF2PGetIOT} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxF2PGetIOTAmountResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.f2PGetIOTAmount = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/F2PGetIOTAmount',
    request,
    metadata || {},
    methodDescriptor_Service_F2PGetIOTAmount,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxF2PGetMiner,
 *   !proto.proto.ProxF2PGetMinerResp>}
 */
const methodDescriptor_Service_F2PGetMinerInfo = new grpc.web.MethodDescriptor(
  '/proto.Service/F2PGetMinerInfo',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxF2PGetMiner,
  proto.proto.ProxF2PGetMinerResp,
  /**
   * @param {!proto.proto.ProxF2PGetMiner} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxF2PGetMinerResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxF2PGetMiner} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxF2PGetMinerResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxF2PGetMinerResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.f2PGetMinerInfo = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/F2PGetMinerInfo',
    request,
    metadata || {},
    methodDescriptor_Service_F2PGetMinerInfo,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxF2PGetMiner} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxF2PGetMinerResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.f2PGetMinerInfo = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/F2PGetMinerInfo',
    request,
    metadata || {},
    methodDescriptor_Service_F2PGetMinerInfo,
  );
};

/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.ProxF2PGetApp,
 *   !proto.proto.ProxF2PGetAppResp>}
 */
const methodDescriptor_Service_F2PGetAppInfo = new grpc.web.MethodDescriptor(
  '/proto.Service/F2PGetAppInfo',
  grpc.web.MethodType.UNARY,
  proto.proto.ProxF2PGetApp,
  proto.proto.ProxF2PGetAppResp,
  /**
   * @param {!proto.proto.ProxF2PGetApp} request
   * @return {!Uint8Array}
   */
  function (request) {
    return request.serializeBinary();
  },
  proto.proto.ProxF2PGetAppResp.deserializeBinary,
);

/**
 * @param {!proto.proto.ProxF2PGetApp} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.ProxF2PGetAppResp)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.ProxF2PGetAppResp>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.ServiceClient.prototype.f2PGetAppInfo = function (request, metadata, callback) {
  return this.client_.rpcCall(
    this.hostname_ + '/proto.Service/F2PGetAppInfo',
    request,
    metadata || {},
    methodDescriptor_Service_F2PGetAppInfo,
    callback,
  );
};

/**
 * @param {!proto.proto.ProxF2PGetApp} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.ProxF2PGetAppResp>}
 *     Promise that resolves to the response
 */
proto.proto.ServicePromiseClient.prototype.f2PGetAppInfo = function (request, metadata) {
  return this.client_.unaryCall(
    this.hostname_ + '/proto.Service/F2PGetAppInfo',
    request,
    metadata || {},
    methodDescriptor_Service_F2PGetAppInfo,
  );
};

module.exports = proto.proto;
