/**
 * @fileoverview gRPC-Web generated client stub for proto
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.24.3
// source: prox.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from 'grpc-web';

import * as prox_pb from './prox_pb';

export class ServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(hostname: string, credentials?: null | { [index: string]: string }, options?: null | { [index: string]: any }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorPing = new grpcWeb.MethodDescriptor(
    '/proto.Service/Ping',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxPingRequest,
    prox_pb.ProxPingResponse,
    (request: prox_pb.ProxPingRequest) => {
      return request.serializeBinary();
    },
    prox_pb.ProxPingResponse.deserializeBinary,
  );

  ping(request: prox_pb.ProxPingRequest, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxPingResponse>;

  ping(
    request: prox_pb.ProxPingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxPingResponse) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxPingResponse>;

  ping(
    request: prox_pb.ProxPingRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxPingResponse) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(this.hostname_ + '/proto.Service/Ping', request, metadata || {}, this.methodDescriptorPing, callback);
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/Ping', request, metadata || {}, this.methodDescriptorPing);
  }

  methodDescriptorPin = new grpcWeb.MethodDescriptor(
    '/proto.Service/Pin',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxPinReq,
    prox_pb.ProxPinResp,
    (request: prox_pb.ProxPinReq) => {
      return request.serializeBinary();
    },
    prox_pb.ProxPinResp.deserializeBinary,
  );

  pin(request: prox_pb.ProxPinReq, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxPinResp>;

  pin(
    request: prox_pb.ProxPinReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxPinResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxPinResp>;

  pin(
    request: prox_pb.ProxPinReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxPinResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(this.hostname_ + '/proto.Service/Pin', request, metadata || {}, this.methodDescriptorPin, callback);
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/Pin', request, metadata || {}, this.methodDescriptorPin);
  }

  methodDescriptorGetPeerIdInfo = new grpcWeb.MethodDescriptor(
    '/proto.Service/GetPeerIdInfo',
    grpcWeb.MethodType.UNARY,
    prox_pb.GetPeerIdInfoReq,
    prox_pb.GetPeerIDReply,
    (request: prox_pb.GetPeerIdInfoReq) => {
      return request.serializeBinary();
    },
    prox_pb.GetPeerIDReply.deserializeBinary,
  );

  getPeerIdInfo(request: prox_pb.GetPeerIdInfoReq, metadata: grpcWeb.Metadata | null): Promise<prox_pb.GetPeerIDReply>;

  getPeerIdInfo(
    request: prox_pb.GetPeerIdInfoReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.GetPeerIDReply) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.GetPeerIDReply>;

  getPeerIdInfo(
    request: prox_pb.GetPeerIdInfoReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.GetPeerIDReply) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/GetPeerIdInfo',
        request,
        metadata || {},
        this.methodDescriptorGetPeerIdInfo,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/proto.Service/GetPeerIdInfo',
      request,
      metadata || {},
      this.methodDescriptorGetPeerIdInfo,
    );
  }

  methodDescriptorNewMultipartObject = new grpcWeb.MethodDescriptor(
    '/proto.Service/NewMultipartObject',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxPutObjectReq,
    prox_pb.ProxMultipartCreateResp,
    (request: prox_pb.ProxPutObjectReq) => {
      return request.serializeBinary();
    },
    prox_pb.ProxMultipartCreateResp.deserializeBinary,
  );

  newMultipartObject(request: prox_pb.ProxPutObjectReq, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxMultipartCreateResp>;

  newMultipartObject(
    request: prox_pb.ProxPutObjectReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxMultipartCreateResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxMultipartCreateResp>;

  newMultipartObject(
    request: prox_pb.ProxPutObjectReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxMultipartCreateResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/NewMultipartObject',
        request,
        metadata || {},
        this.methodDescriptorNewMultipartObject,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/proto.Service/NewMultipartObject',
      request,
      metadata || {},
      this.methodDescriptorNewMultipartObject,
    );
  }

  methodDescriptorCompleteMultipart = new grpcWeb.MethodDescriptor(
    '/proto.Service/CompleteMultipart',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxCompleteMultipartReq,
    prox_pb.ProxCompleteMultipartResp,
    (request: prox_pb.ProxCompleteMultipartReq) => {
      return request.serializeBinary();
    },
    prox_pb.ProxCompleteMultipartResp.deserializeBinary,
  );

  completeMultipart(
    request: prox_pb.ProxCompleteMultipartReq,
    metadata: grpcWeb.Metadata | null,
  ): Promise<prox_pb.ProxCompleteMultipartResp>;

  completeMultipart(
    request: prox_pb.ProxCompleteMultipartReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxCompleteMultipartResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxCompleteMultipartResp>;

  completeMultipart(
    request: prox_pb.ProxCompleteMultipartReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxCompleteMultipartResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/CompleteMultipart',
        request,
        metadata || {},
        this.methodDescriptorCompleteMultipart,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/proto.Service/CompleteMultipart',
      request,
      metadata || {},
      this.methodDescriptorCompleteMultipart,
    );
  }

  methodDescriptorListMultipart = new grpcWeb.MethodDescriptor(
    '/proto.Service/ListMultipart',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxListUploadReq,
    prox_pb.ProxListMultipartUploadResponse,
    (request: prox_pb.ProxListUploadReq) => {
      return request.serializeBinary();
    },
    prox_pb.ProxListMultipartUploadResponse.deserializeBinary,
  );

  listMultipart(request: prox_pb.ProxListUploadReq, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxListMultipartUploadResponse>;

  listMultipart(
    request: prox_pb.ProxListUploadReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxListMultipartUploadResponse) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxListMultipartUploadResponse>;

  listMultipart(
    request: prox_pb.ProxListUploadReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxListMultipartUploadResponse) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/ListMultipart',
        request,
        metadata || {},
        this.methodDescriptorListMultipart,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/proto.Service/ListMultipart',
      request,
      metadata || {},
      this.methodDescriptorListMultipart,
    );
  }

  methodDescriptorListObjectParts = new grpcWeb.MethodDescriptor(
    '/proto.Service/ListObjectParts',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxListPartsReq,
    prox_pb.ProxListPartsResponse,
    (request: prox_pb.ProxListPartsReq) => {
      return request.serializeBinary();
    },
    prox_pb.ProxListPartsResponse.deserializeBinary,
  );

  listObjectParts(request: prox_pb.ProxListPartsReq, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxListPartsResponse>;

  listObjectParts(
    request: prox_pb.ProxListPartsReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxListPartsResponse) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxListPartsResponse>;

  listObjectParts(
    request: prox_pb.ProxListPartsReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxListPartsResponse) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/ListObjectParts',
        request,
        metadata || {},
        this.methodDescriptorListObjectParts,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/proto.Service/ListObjectParts',
      request,
      metadata || {},
      this.methodDescriptorListObjectParts,
    );
  }

  methodDescriptorListObjects = new grpcWeb.MethodDescriptor(
    '/proto.Service/ListObjects',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxListObjectsReq,
    prox_pb.ProxListObjectsResp,
    (request: prox_pb.ProxListObjectsReq) => {
      return request.serializeBinary();
    },
    prox_pb.ProxListObjectsResp.deserializeBinary,
  );

  listObjects(request: prox_pb.ProxListObjectsReq, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxListObjectsResp>;

  listObjects(
    request: prox_pb.ProxListObjectsReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxListObjectsResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxListObjectsResp>;

  listObjects(
    request: prox_pb.ProxListObjectsReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxListObjectsResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/ListObjects',
        request,
        metadata || {},
        this.methodDescriptorListObjects,
        callback,
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/ListObjects', request, metadata || {}, this.methodDescriptorListObjects);
  }

  methodDescriptorGetObject = new grpcWeb.MethodDescriptor(
    '/proto.Service/GetObject',
    grpcWeb.MethodType.SERVER_STREAMING,
    prox_pb.ProxGetRequest,
    prox_pb.ProxGetResponse,
    (request: prox_pb.ProxGetRequest) => {
      return request.serializeBinary();
    },
    prox_pb.ProxGetResponse.deserializeBinary,
  );

  getObject(request: prox_pb.ProxGetRequest, metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<prox_pb.ProxGetResponse> {
    return this.client_.serverStreaming(
      this.hostname_ + '/proto.Service/GetObject',
      request,
      metadata || {},
      this.methodDescriptorGetObject,
    );
  }

  methodDescriptorGetObjects = new grpcWeb.MethodDescriptor(
    '/proto.Service/GetObjects',
    grpcWeb.MethodType.SERVER_STREAMING,
    prox_pb.ProxGetRequests,
    prox_pb.ProxGetResponse,
    (request: prox_pb.ProxGetRequests) => {
      return request.serializeBinary();
    },
    prox_pb.ProxGetResponse.deserializeBinary,
  );

  getObjects(request: prox_pb.ProxGetRequests, metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<prox_pb.ProxGetResponse> {
    return this.client_.serverStreaming(
      this.hostname_ + '/proto.Service/GetObjects',
      request,
      metadata || {},
      this.methodDescriptorGetObjects,
    );
  }

  methodDescriptorSearchObject = new grpcWeb.MethodDescriptor(
    '/proto.Service/SearchObject',
    grpcWeb.MethodType.SERVER_STREAMING,
    prox_pb.ProxSearchRequest,
    prox_pb.ProxSearchResponse,
    (request: prox_pb.ProxSearchRequest) => {
      return request.serializeBinary();
    },
    prox_pb.ProxSearchResponse.deserializeBinary,
  );

  searchObject(request: prox_pb.ProxSearchRequest, metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<prox_pb.ProxSearchResponse> {
    return this.client_.serverStreaming(
      this.hostname_ + '/proto.Service/SearchObject',
      request,
      metadata || {},
      this.methodDescriptorSearchObject,
    );
  }

  methodDescriptorFindObjects = new grpcWeb.MethodDescriptor(
    '/proto.Service/FindObjects',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxFindRequest,
    prox_pb.ProxObjects,
    (request: prox_pb.ProxFindRequest) => {
      return request.serializeBinary();
    },
    prox_pb.ProxObjects.deserializeBinary,
  );

  findObjects(request: prox_pb.ProxFindRequest, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxObjects>;

  findObjects(
    request: prox_pb.ProxFindRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxObjects) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxObjects>;

  findObjects(
    request: prox_pb.ProxFindRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxObjects) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/FindObjects',
        request,
        metadata || {},
        this.methodDescriptorFindObjects,
        callback,
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/FindObjects', request, metadata || {}, this.methodDescriptorFindObjects);
  }

  methodDescriptorGetObjectInfo = new grpcWeb.MethodDescriptor(
    '/proto.Service/GetObjectInfo',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxGetRequest,
    prox_pb.ProxObject,
    (request: prox_pb.ProxGetRequest) => {
      return request.serializeBinary();
    },
    prox_pb.ProxObject.deserializeBinary,
  );

  getObjectInfo(request: prox_pb.ProxGetRequest, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxObject>;

  getObjectInfo(
    request: prox_pb.ProxGetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxObject) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxObject>;

  getObjectInfo(
    request: prox_pb.ProxGetRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxObject) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/GetObjectInfo',
        request,
        metadata || {},
        this.methodDescriptorGetObjectInfo,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/proto.Service/GetObjectInfo',
      request,
      metadata || {},
      this.methodDescriptorGetObjectInfo,
    );
  }

  methodDescriptorDeleteObject = new grpcWeb.MethodDescriptor(
    '/proto.Service/DeleteObject',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxDeleteObjectReq,
    prox_pb.ProxDeleteResp,
    (request: prox_pb.ProxDeleteObjectReq) => {
      return request.serializeBinary();
    },
    prox_pb.ProxDeleteResp.deserializeBinary,
  );

  deleteObject(request: prox_pb.ProxDeleteObjectReq, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxDeleteResp>;

  deleteObject(
    request: prox_pb.ProxDeleteObjectReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxDeleteResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxDeleteResp>;

  deleteObject(
    request: prox_pb.ProxDeleteObjectReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxDeleteResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/DeleteObject',
        request,
        metadata || {},
        this.methodDescriptorDeleteObject,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/proto.Service/DeleteObject',
      request,
      metadata || {},
      this.methodDescriptorDeleteObject,
    );
  }

  methodDescriptorSummaryInfo = new grpcWeb.MethodDescriptor(
    '/proto.Service/SummaryInfo',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxRequestSummaryIds,
    prox_pb.ProxSummaryInfos,
    (request: prox_pb.ProxRequestSummaryIds) => {
      return request.serializeBinary();
    },
    prox_pb.ProxSummaryInfos.deserializeBinary,
  );

  summaryInfo(request: prox_pb.ProxRequestSummaryIds, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxSummaryInfos>;

  summaryInfo(
    request: prox_pb.ProxRequestSummaryIds,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxSummaryInfos) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxSummaryInfos>;

  summaryInfo(
    request: prox_pb.ProxRequestSummaryIds,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxSummaryInfos) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/SummaryInfo',
        request,
        metadata || {},
        this.methodDescriptorSummaryInfo,
        callback,
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/SummaryInfo', request, metadata || {}, this.methodDescriptorSummaryInfo);
  }

  methodDescriptorRenameObjects = new grpcWeb.MethodDescriptor(
    '/proto.Service/RenameObjects',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxRenameObject,
    prox_pb.ProxRenameObjectResp,
    (request: prox_pb.ProxRenameObject) => {
      return request.serializeBinary();
    },
    prox_pb.ProxRenameObjectResp.deserializeBinary,
  );

  renameObjects(request: prox_pb.ProxRenameObject, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxRenameObjectResp>;

  renameObjects(
    request: prox_pb.ProxRenameObject,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxRenameObjectResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxRenameObjectResp>;

  renameObjects(
    request: prox_pb.ProxRenameObject,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxRenameObjectResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/RenameObjects',
        request,
        metadata || {},
        this.methodDescriptorRenameObjects,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/proto.Service/RenameObjects',
      request,
      metadata || {},
      this.methodDescriptorRenameObjects,
    );
  }

  methodDescriptorGetTimeLine = new grpcWeb.MethodDescriptor(
    '/proto.Service/GetTimeLine',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxTimeLine,
    prox_pb.ProxTimeLineResp,
    (request: prox_pb.ProxTimeLine) => {
      return request.serializeBinary();
    },
    prox_pb.ProxTimeLineResp.deserializeBinary,
  );

  getTimeLine(request: prox_pb.ProxTimeLine, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxTimeLineResp>;

  getTimeLine(
    request: prox_pb.ProxTimeLine,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxTimeLineResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxTimeLineResp>;

  getTimeLine(
    request: prox_pb.ProxTimeLine,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxTimeLineResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/GetTimeLine',
        request,
        metadata || {},
        this.methodDescriptorGetTimeLine,
        callback,
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/GetTimeLine', request, metadata || {}, this.methodDescriptorGetTimeLine);
  }

  methodDescriptorGetPreSigned = new grpcWeb.MethodDescriptor(
    '/proto.Service/GetPreSigned',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxPresignedURL,
    prox_pb.ProxPresignedURLResp,
    (request: prox_pb.ProxPresignedURL) => {
      return request.serializeBinary();
    },
    prox_pb.ProxPresignedURLResp.deserializeBinary,
  );

  getPreSigned(request: prox_pb.ProxPresignedURL, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxPresignedURLResp>;

  getPreSigned(
    request: prox_pb.ProxPresignedURL,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxPresignedURLResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxPresignedURLResp>;

  getPreSigned(
    request: prox_pb.ProxPresignedURL,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxPresignedURLResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/GetPreSigned',
        request,
        metadata || {},
        this.methodDescriptorGetPreSigned,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/proto.Service/GetPreSigned',
      request,
      metadata || {},
      this.methodDescriptorGetPreSigned,
    );
  }

  methodDescriptorTouchFile = new grpcWeb.MethodDescriptor(
    '/proto.Service/TouchFile',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxFileInfo,
    prox_pb.ProxTouchResp,
    (request: prox_pb.ProxFileInfo) => {
      return request.serializeBinary();
    },
    prox_pb.ProxTouchResp.deserializeBinary,
  );

  touchFile(request: prox_pb.ProxFileInfo, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxTouchResp>;

  touchFile(
    request: prox_pb.ProxFileInfo,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxTouchResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxTouchResp>;

  touchFile(
    request: prox_pb.ProxFileInfo,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxTouchResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/TouchFile',
        request,
        metadata || {},
        this.methodDescriptorTouchFile,
        callback,
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/TouchFile', request, metadata || {}, this.methodDescriptorTouchFile);
  }

  methodDescriptorChat = new grpcWeb.MethodDescriptor(
    '/proto.Service/Chat',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxChatReq,
    prox_pb.ProxChatResponse,
    (request: prox_pb.ProxChatReq) => {
      return request.serializeBinary();
    },
    prox_pb.ProxChatResponse.deserializeBinary,
  );

  chat(request: prox_pb.ProxChatReq, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxChatResponse>;

  chat(
    request: prox_pb.ProxChatReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxChatResponse) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxChatResponse>;

  chat(
    request: prox_pb.ProxChatReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxChatResponse) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(this.hostname_ + '/proto.Service/Chat', request, metadata || {}, this.methodDescriptorChat, callback);
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/Chat', request, metadata || {}, this.methodDescriptorChat);
  }

  methodDescriptorKnowledge = new grpcWeb.MethodDescriptor(
    '/proto.Service/Knowledge',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxKNReq,
    prox_pb.ProxKNResponse,
    (request: prox_pb.ProxKNReq) => {
      return request.serializeBinary();
    },
    prox_pb.ProxKNResponse.deserializeBinary,
  );

  knowledge(request: prox_pb.ProxKNReq, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxKNResponse>;

  knowledge(
    request: prox_pb.ProxKNReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxKNResponse) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxKNResponse>;

  knowledge(
    request: prox_pb.ProxKNReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxKNResponse) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/Knowledge',
        request,
        metadata || {},
        this.methodDescriptorKnowledge,
        callback,
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/Knowledge', request, metadata || {}, this.methodDescriptorKnowledge);
  }

  methodDescriptorGenerateCred = new grpcWeb.MethodDescriptor(
    '/proto.Service/GenerateCred',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxCredRequest,
    prox_pb.ProxCredResp,
    (request: prox_pb.ProxCredRequest) => {
      return request.serializeBinary();
    },
    prox_pb.ProxCredResp.deserializeBinary,
  );

  generateCred(request: prox_pb.ProxCredRequest, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxCredResp>;

  generateCred(
    request: prox_pb.ProxCredRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxCredResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxCredResp>;

  generateCred(
    request: prox_pb.ProxCredRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxCredResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/GenerateCred',
        request,
        metadata || {},
        this.methodDescriptorGenerateCred,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/proto.Service/GenerateCred',
      request,
      metadata || {},
      this.methodDescriptorGenerateCred,
    );
  }

  methodDescriptorListCreds = new grpcWeb.MethodDescriptor(
    '/proto.Service/ListCreds',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxGetCredRequest,
    prox_pb.ProxCredsList,
    (request: prox_pb.ProxGetCredRequest) => {
      return request.serializeBinary();
    },
    prox_pb.ProxCredsList.deserializeBinary,
  );

  listCreds(request: prox_pb.ProxGetCredRequest, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxCredsList>;

  listCreds(
    request: prox_pb.ProxGetCredRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxCredsList) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxCredsList>;

  listCreds(
    request: prox_pb.ProxGetCredRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxCredsList) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/ListCreds',
        request,
        metadata || {},
        this.methodDescriptorListCreds,
        callback,
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/ListCreds', request, metadata || {}, this.methodDescriptorListCreds);
  }

  methodDescriptorDeleteCred = new grpcWeb.MethodDescriptor(
    '/proto.Service/DeleteCred',
    grpcWeb.MethodType.UNARY,
    prox_pb.ProxCredRequest,
    prox_pb.ProxCredResp,
    (request: prox_pb.ProxCredRequest) => {
      return request.serializeBinary();
    },
    prox_pb.ProxCredResp.deserializeBinary,
  );

  deleteCred(request: prox_pb.ProxCredRequest, metadata: grpcWeb.Metadata | null): Promise<prox_pb.ProxCredResp>;

  deleteCred(
    request: prox_pb.ProxCredRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: prox_pb.ProxCredResp) => void,
  ): grpcWeb.ClientReadableStream<prox_pb.ProxCredResp>;

  deleteCred(
    request: prox_pb.ProxCredRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: prox_pb.ProxCredResp) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/proto.Service/DeleteCred',
        request,
        metadata || {},
        this.methodDescriptorDeleteCred,
        callback,
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/proto.Service/DeleteCred', request, metadata || {}, this.methodDescriptorDeleteCred);
  }
}
